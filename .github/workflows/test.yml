name: Tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 6 * * *'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python: ['3.9', '3.10', '3.11', '3.12']
        vendored_env: [unvendored]
        include:
          - os: ubuntu-latest
            python: '3.9'
            vendored_env: dandi
            instance_name: DANDI
            datacite_doi_id: '80507'
          - os: ubuntu-latest
            python: '3.9'
            vendored_env: ember-dandi
            instance_name: EMBER-DANDI
            datacite_doi_id: '60533'
    steps:
    - name: Set up environment
      uses: actions/checkout@v4
      with:
        # Fetch all commits so that versioningit will return something
        # compatible with semantic-version
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        python -m pip install --upgrade tox

    - name: Set vendor environment
      if: ${{ matrix.vendored_env != 'unvendored' }}
      shell: bash
      run: |
        echo "DANDI_INSTANCE_NAME=${{ matrix.instance_name }}" >> "$GITHUB_ENV"
        echo "DANDI_DATACITE_DOI_ID=${{ matrix.datacite_doi_id }}" >> "$GITHUB_ENV"

    - name: Run all tests
      env:
        DATACITE_DEV_PASSWORD: ${{ secrets.DATACITE_DEV_PASSWORD }}
        NO_ET: 1
      run: tox -e py -- -s --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        # name: codecov-umbrella
        # yml: ./codecov.yml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
